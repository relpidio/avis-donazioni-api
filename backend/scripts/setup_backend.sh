#!/bin/bash
set -e

PROJECT_DIR="/Users/rodrigoelpidio/Avis_App/backend/python-fastapi"
GENERATED_DIR="$PROJECT_DIR/generated"
VENV_DIR="$PROJECT_DIR/.venv"
ENV_FILE="$PROJECT_DIR/.env"

echo "üöÄ Iniciando backend FastAPI com verifica√ß√£o de ambiente e depend√™ncias..."

# ==========================================================
# 1Ô∏è‚É£ Verificar e ativar ambiente virtual
# ==========================================================
if [ -d "$VENV_DIR" ]; then
  echo "‚úÖ Ambiente virtual detectado em: $VENV_DIR"
else
  echo "‚ùå Ambiente virtual n√£o encontrado, criando novo..."
  python3 -m venv "$VENV_DIR"
fi

source "$VENV_DIR/bin/activate"

# Atualizar pip
pip install --upgrade pip >/dev/null

# ==========================================================
# 2Ô∏è‚É£ Instalar depend√™ncias principais
# ==========================================================
echo "üì¶ Instalando depend√™ncias principais..."
pip install --quiet \
  "fastapi>=0.111" "uvicorn[standard]" "sqlalchemy>=2.0" "psycopg2-binary" \
  "pydantic[email]" "passlib[argon2,bcrypt]" "python-jose[cryptography]" "python-multipart"

# ==========================================================
# 3Ô∏è‚É£ Gerar arquivo .env se n√£o existir
# ==========================================================
if [ ! -f "$ENV_FILE" ]; then
  echo "üß© Criando arquivo .env padr√£o..."
  cat <<EOF > "$ENV_FILE"
POSTGRES_USER=avis_user
POSTGRES_PASSWORD=avis_password
POSTGRES_DB=avis_db
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

DATABASE_URL=postgresql+psycopg2://avis_user:avis_password@localhost:5432/avis_db
JWT_SECRET=$(openssl rand -hex 32)
EOF
else
  echo "‚úÖ Arquivo .env j√° existe ‚Äî mantendo configura√ß√£o atual."
fi

# ==========================================================
# 4Ô∏è‚É£ Carregar vari√°veis do .env no ambiente
# ==========================================================
export $(grep -v '^#' "$ENV_FILE" | xargs)

# ==========================================================
# 5Ô∏è‚É£ Subir container do PostgreSQL
# ==========================================================
echo "üê≥ Subindo container PostgreSQL..."
docker compose -f "$PROJECT_DIR/../docker-compose.yml" up -d

# ==========================================================
# 6Ô∏è‚É£ Testar conex√£o com o banco
# ==========================================================
echo "üß± Verificando conex√£o com banco..."
python - <<PYCODE
from sqlalchemy import create_engine
import os, time

url = os.getenv("DATABASE_URL", "postgresql+psycopg2://avis_user:avis_password@127.0.0.1:5432/avis_db")
print(f"üîó Testando conex√£o com: {url}")
time.sleep(3)
try:
    engine = create_engine(url)
    with engine.connect() as conn:
        print("‚úÖ Conectado ao banco com sucesso!")
except Exception as e:
    print("‚ùå Erro ao conectar ao banco:", e)
PYCODE

# ==========================================================
# 7Ô∏è‚É£ Iniciar servidor FastAPI
# ==========================================================
echo "üåê Iniciando servidor FastAPI..."
cd "$GENERATED_DIR"
uvicorn openapi_server.main:app --app-dir src --host 0.0.0.0 --port 8000 --reload