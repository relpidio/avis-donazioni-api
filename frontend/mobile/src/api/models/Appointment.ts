/* tslint:disable */
/* eslint-disable */
/**
 * AVIS Donazioni API
 * API per l\'app mobile AVIS (Italia) per la gestione delle donazioni di sangue. Lingua primaria: italiano (supporto inglese opzionalmente). Implementazione MVP ispirata al NHS Give Blood (booking, centri, storico donazioni, notifiche). 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@avis.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Slot } from './Slot';
import {
    SlotFromJSON,
    SlotFromJSONTyped,
    SlotToJSON,
    SlotToJSONTyped,
} from './Slot';

/**
 * 
 * @export
 * @interface Appointment
 */
export interface Appointment {
    /**
     * 
     * @type {string}
     * @memberof Appointment
     */
    appointmentId?: string;
    /**
     * 
     * @type {string}
     * @memberof Appointment
     */
    donorId?: string;
    /**
     * 
     * @type {string}
     * @memberof Appointment
     */
    centerId?: string;
    /**
     * 
     * @type {Slot}
     * @memberof Appointment
     */
    slot?: Slot;
    /**
     * 
     * @type {string}
     * @memberof Appointment
     */
    status?: AppointmentStatusEnum;
}


/**
 * @export
 */
export const AppointmentStatusEnum = {
    Booked: 'booked',
    Cancelled: 'cancelled',
    Completed: 'completed'
} as const;
export type AppointmentStatusEnum = typeof AppointmentStatusEnum[keyof typeof AppointmentStatusEnum];


/**
 * Check if a given object implements the Appointment interface.
 */
export function instanceOfAppointment(value: object): value is Appointment {
    return true;
}

export function AppointmentFromJSON(json: any): Appointment {
    return AppointmentFromJSONTyped(json, false);
}

export function AppointmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Appointment {
    if (json == null) {
        return json;
    }
    return {
        
        'appointmentId': json['appointment_id'] == null ? undefined : json['appointment_id'],
        'donorId': json['donor_id'] == null ? undefined : json['donor_id'],
        'centerId': json['center_id'] == null ? undefined : json['center_id'],
        'slot': json['slot'] == null ? undefined : SlotFromJSON(json['slot']),
        'status': json['status'] == null ? undefined : json['status'],
    };
}

export function AppointmentToJSON(json: any): Appointment {
    return AppointmentToJSONTyped(json, false);
}

export function AppointmentToJSONTyped(value?: Appointment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'appointment_id': value['appointmentId'],
        'donor_id': value['donorId'],
        'center_id': value['centerId'],
        'slot': SlotToJSON(value['slot']),
        'status': value['status'],
    };
}

