/* tslint:disable */
/* eslint-disable */
/**
 * AVIS Donazioni API
 * API per l\'app mobile AVIS (Italia) per la gestione delle donazioni di sangue. Lingua primaria: italiano (supporto inglese opzionalmente). Implementazione MVP ispirata al NHS Give Blood (booking, centri, storico donazioni, notifiche). 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: dev@avis.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RegisterRequest
 */
export interface RegisterRequest {
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    lastName: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    email: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    phone?: string;
    /**
     * Codice Fiscale italiano (sostituisce 'CPF')
     * @type {string}
     * @memberof RegisterRequest
     */
    codiceFiscale: string;
    /**
     * 
     * @type {Date}
     * @memberof RegisterRequest
     */
    dob?: Date;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    bloodGroup?: string;
    /**
     * 
     * @type {string}
     * @memberof RegisterRequest
     */
    password: string;
    /**
     * 
     * @type {boolean}
     * @memberof RegisterRequest
     */
    gdprConsent: boolean;
}

/**
 * Check if a given object implements the RegisterRequest interface.
 */
export function instanceOfRegisterRequest(value: object): value is RegisterRequest {
    if (!('firstName' in value) || value['firstName'] === undefined) return false;
    if (!('lastName' in value) || value['lastName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('codiceFiscale' in value) || value['codiceFiscale'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    if (!('gdprConsent' in value) || value['gdprConsent'] === undefined) return false;
    return true;
}

export function RegisterRequestFromJSON(json: any): RegisterRequest {
    return RegisterRequestFromJSONTyped(json, false);
}

export function RegisterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegisterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'firstName': json['first_name'],
        'lastName': json['last_name'],
        'email': json['email'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'codiceFiscale': json['codice_fiscale'],
        'dob': json['dob'] == null ? undefined : (new Date(json['dob'])),
        'bloodGroup': json['blood_group'] == null ? undefined : json['blood_group'],
        'password': json['password'],
        'gdprConsent': json['gdpr_consent'],
    };
}

export function RegisterRequestToJSON(json: any): RegisterRequest {
    return RegisterRequestToJSONTyped(json, false);
}

export function RegisterRequestToJSONTyped(value?: RegisterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'first_name': value['firstName'],
        'last_name': value['lastName'],
        'email': value['email'],
        'phone': value['phone'],
        'codice_fiscale': value['codiceFiscale'],
        'dob': value['dob'] == null ? value['dob'] : value['dob'].toISOString().substring(0,10),
        'blood_group': value['bloodGroup'],
        'password': value['password'],
        'gdpr_consent': value['gdprConsent'],
    };
}

